import  org.junit.jupiter.api.AfterAll
import  org.junit.jupiter.api.BeforeAll
import  org.junit.jupiter.api.BeforeEach
import  org.junit.jupiter.api.Test
import  org.junit.jupiter.api.Timeout
import  org.junit.jupiter.api.Assertions.*
import  java.util.List
import  org.evomaster.client.java.controller.api.EMTestUtils.*
import  org.evomaster.client.java.controller.SutHandler
import  io.restassured.RestAssured
import  io.restassured.RestAssured.given
import  io.restassured.response.ValidatableResponse
import  org.hamcrest.Matchers.*
import  io.restassured.config.JsonConfig
import  io.restassured.path.json.config.JsonPathConfig
import  io.restassured.config.RedirectConfig.redirectConfig
import  org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*
import  org.evomaster.client.java.controller.contentMatchers.StringMatcher.*
import  org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*
import  org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler
import  org.evomaster.client.java.controller.expect.ExpectationHandler
import  io.restassured.path.json.JsonPath
import  java.util.Arrays




/**
 * This file was automatically generated by EvoMaster on 2024-02-09T11:43:50.108-03:00\[America/Argentina/Buenos_Aires\]
 * 
 * The generated test suite contains 1 tests
 * 
 * Covered targets: 2
 * 
 * Used time: 0h 0m 10s
 * 
 * Needed budget for current results: 100%
 * 
 * This file contains one example of each category of fault. The test cases in this file are a subset of the set of test cases likely to indicate faults.
 */
internal class EvoMaster_fault_representatives_Test {

    
    companion object {
        private val controller : SutHandler = *AppController()
        private lateinit var baseUrlOfSut: String
        /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
        * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
        */
        private val ems = false
        /**
        * sco - supported code oracle - checking that the response status code is among those supported according to the schema
        */
        private val sco = false
        
        
        @BeforeAll
        @JvmStatic
        fun initClass() {
            controller.setupForGeneratedTest()
            baseUrlOfSut = controller.startSut()
            controller.registerOrExecuteInitSqlCommandsIfNeeded()
            assertNotNull(baseUrlOfSut)
            RestAssured.enableLoggingOfRequestAndResponseIfValidationFails()
            RestAssured.useRelaxedHTTPSValidation()
            RestAssured.urlEncodingEnabled = false
            RestAssured.config = RestAssured.config()
                .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
                .redirect(redirectConfig().followRedirects(false))
        }
        
        
        @AfterAll
        @JvmStatic
        fun tearDown() {
            controller.stopSut()
        }
    }
    
    
    @BeforeEach
    fun initTest() {
        controller.resetStateOfSUT()
    }
    
    
    
    
    @Test @Timeout(60)
    fun test_0()  {
        val expectationHandler: ExpectationHandler = expectationHandler()
        
        val res_0: ValidatableResponse = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1_XYZ_")
                .get("${baseUrlOfSut}/api/fisher/91137470/743/0.5044041198342073")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString())
        
        expectationHandler.expect(ems)
            .that(sco, listOf<Int>(200, 401, 403, 404).contains(res_0.extract().statusCode()))
    }


}

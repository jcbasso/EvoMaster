const superagent = require("superagent");
const EM = require("evomaster-client-js").EMTestUtils;
const *AppController = require("./app-driver.js");
jest.setTimeout(60000);




/**
 * This file was automatically generated by EvoMaster on 2024-02-09T11:43:18.532-03:00[America/Argentina/Buenos_Aires]
 * 
 * The generated test suite contains 5 tests
 * 
 * Covered targets: 10
 * 
 * Used time: 0h 0m 10s
 * 
 * Needed budget for current results: 100%
 * 
 * This file contains test cases that represent failed calls, but not indicative of faults.
 */

const controller = new *AppController();
let baseUrlOfSut;


beforeAll( async () => {
    await controller.setupForGeneratedTest();
    baseUrlOfSut = await controller.startSut();
    expect(baseUrlOfSut).toBeTruthy();
});


afterAll( async () => {
    await controller.stopSut();
});


beforeEach(async () =>  {
    await controller.resetStateOfSUT();
});






test("test_1", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/fisher/349/1298013847/0.016315296368474286?EMextraParam123=_EM_23_XYZ_").set('Accept', "*/*")
            .set("x-EMextraHeader123", "42")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(400);
    expect(res_0.body===null || res_0.body===undefined || res_0.body==="" || Object.keys(res_0.body).length === 0).toBe(true);
});


test("test_2", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/remainder/33555158/33554949").set('Accept', "*/*")
            .set("x-EMextraHeader123", "")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(400);
    expect(res_0.body===null || res_0.body===undefined || res_0.body==="" || Object.keys(res_0.body).length === 0).toBe(true);
});


test("test_3", async () => {
    
    const res_0 = await superagent
            .get(baseUrlOfSut + "/api/bessj/2098076/0.32551742893498536?EMextraParam123=42").set('Accept', "*/*")
            .set("x-EMextraHeader123", "_EM_4_XYZ_")
            .ok(res => res.status);
    
    expect(res_0.status).toBe(400);
    expect(res_0.body===null || res_0.body===undefined || res_0.body==="" || Object.keys(res_0.body).length === 0).toBe(true);
});


